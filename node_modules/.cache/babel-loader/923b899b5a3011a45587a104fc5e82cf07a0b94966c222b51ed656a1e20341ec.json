{"ast":null,"code":"var _jsxFileName = \"/Users/tanyakumari/Desktop/BlogFeacture/blogapp/src/components/App.jsx\",\n  _s = $RefreshSig$();\n// import React,{useState} from \"react\";\n// import Footer from \"./Footer\";\n// import Header from \"./Header\";\n// import Search from \"./Search\";\n// import Blog from \"./Blog\";\n// import CreateBlog  from \"./CreateBlog\";\n// import preblog from \"./info\";\n// import Entry from \"./Entry\";\n// import Filtered from \"./Filtered\";\n// function App(){\n\n//     const [blogs, setBlogs] = useState([]);\n//     const [searchQuery, setSearchQuery] = useState(\"\");\n//     function addBlog(newBlog) {\n//         setBlogs((prevBlogs) => {\n//           return [...prevBlogs, newBlog];\n//         });\n//       }\n\n//   const handleTitleSearch = (query) => {\n//     setSearchQuery(query);\n//   };\n//   const filteredBlogs = blogs.filter((blog) =>\n//   blog.title.toLowerCase().includes(searchQuery.toLowerCase())\n// );\n\n//   const filteredPreBlogs = blogs.filter((blog) =>\n//     blog.title.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//     return(\n//         <div>  \n//             <Header/>\n//             <Search onSearch={handleTitleSearch} />\n\n//             <Filtered preblog={preblog} />\n//             <CreateBlog onAdd={addBlog} />\n\n//           {/* Displaying filtered blogs if there's a search query */}\n\n//         {filteredBlogs.map((blog, index) => (\n//             <Blog\n//               imgURL={blog.imgURL}\n//               key={index}\n//               id={index}\n//               title={blog.title}\n//               content={blog.content}\n//               theme={blog.theme}\n//               description={blog.description}\n//             />\n//           ))}\n\n//       <dl className=\"dictionary\">{preblog.map(Entry)}</dl>      \n//             <Footer />\n//         </div>   \n//     );\n// }\n\n// export default App;\nimport React, { useState } from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport Blog from \"./Blog\";\nimport CreateBlog from \"./CreateBlog\";\nimport preblog from \"./info\";\nimport Entry from \"./Entry\";\nimport Filtered from \"./Filtered\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [blogs, setBlogs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  function addBlog(newBlog) {\n    setBlogs(prevBlogs => {\n      return [...prevBlogs, newBlog];\n    });\n  }\n  const handleTitleSearch = query => {\n    setSearchQuery(query);\n  };\n  const filteredBlogs = blogs.filter(blog => blog.title.toLowerCase().includes(searchQuery.toLowerCase()));\n  const filteredPreblogs = preblog.filter(blog => blog.title.toLowerCase().includes(searchQuery.toLowerCase()) || blog.theme.toLowerCase().includes(searchQuery.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Search, {\n      onSearch: handleTitleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), filteredPreblogs.map((blog, index) => /*#__PURE__*/_jsxDEV(Blog, {\n      imgURL: blog.imgURL,\n      id: index,\n      title: blog.title,\n      content: blog.content,\n      theme: blog.theme,\n      description: blog.description\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this)), filteredBlogs.map((blog, index) => /*#__PURE__*/_jsxDEV(Blog, {\n      imgURL: blog.imgURL,\n      id: index,\n      title: blog.title,\n      content: blog.content,\n      theme: blog.theme,\n      description: blog.description\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CreateBlog, {\n      onAdd: addBlog\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MiS0ZVqoUdQPzlE50E45+mE9fpo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Footer","Header","Search","Blog","CreateBlog","preblog","Entry","Filtered","jsxDEV","_jsxDEV","App","_s","blogs","setBlogs","searchQuery","setSearchQuery","addBlog","newBlog","prevBlogs","handleTitleSearch","query","filteredBlogs","filter","blog","title","toLowerCase","includes","filteredPreblogs","theme","children","fileName","_jsxFileName","lineNumber","columnNumber","onSearch","map","index","imgURL","id","content","description","onAdd","_c","$RefreshReg$"],"sources":["/Users/tanyakumari/Desktop/BlogFeacture/blogapp/src/components/App.jsx"],"sourcesContent":["// import React,{useState} from \"react\";\n// import Footer from \"./Footer\";\n// import Header from \"./Header\";\n// import Search from \"./Search\";\n// import Blog from \"./Blog\";\n// import CreateBlog  from \"./CreateBlog\";\n// import preblog from \"./info\";\n// import Entry from \"./Entry\";\n// import Filtered from \"./Filtered\";\n// function App(){\n\n//     const [blogs, setBlogs] = useState([]);\n//     const [searchQuery, setSearchQuery] = useState(\"\");\n//     function addBlog(newBlog) {\n//         setBlogs((prevBlogs) => {\n//           return [...prevBlogs, newBlog];\n//         });\n//       }\n\n\n\n//   const handleTitleSearch = (query) => {\n//     setSearchQuery(query);\n//   };\n//   const filteredBlogs = blogs.filter((blog) =>\n//   blog.title.toLowerCase().includes(searchQuery.toLowerCase())\n// );\n\n//   const filteredPreBlogs = blogs.filter((blog) =>\n//     blog.title.toLowerCase().includes(searchQuery.toLowerCase())\n//   );\n\n//     return(\n//         <div>  \n//             <Header/>\n//             <Search onSearch={handleTitleSearch} />\n\n    \n//             <Filtered preblog={preblog} />\n//             <CreateBlog onAdd={addBlog} />\n            \n//           {/* Displaying filtered blogs if there's a search query */}\n      \n//         {filteredBlogs.map((blog, index) => (\n//             <Blog\n//               imgURL={blog.imgURL}\n//               key={index}\n//               id={index}\n//               title={blog.title}\n//               content={blog.content}\n//               theme={blog.theme}\n//               description={blog.description}\n//             />\n//           ))}\n      \n      \n//       <dl className=\"dictionary\">{preblog.map(Entry)}</dl>      \n//             <Footer />\n//         </div>   \n//     );\n// }\n\n// export default App;\nimport React, { useState } from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport Search from \"./Search\";\nimport Blog from \"./Blog\";\nimport CreateBlog from \"./CreateBlog\";\nimport preblog from \"./info\";\nimport Entry from \"./Entry\";\nimport Filtered from \"./Filtered\";\n\nfunction App() {\n  const [blogs, setBlogs] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  function addBlog(newBlog) {\n    setBlogs((prevBlogs) => {\n      return [...prevBlogs, newBlog];\n    });\n  }\n\n  const handleTitleSearch = (query) => {\n    setSearchQuery(query);\n  };\n\n  const filteredBlogs = blogs.filter((blog) =>\n    blog.title.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  const filteredPreblogs = preblog.filter(\n    (blog) =>\n      blog.title.toLowerCase().includes(searchQuery.toLowerCase()) ||\n      blog.theme.toLowerCase().includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div>\n      <Header />\n      <Search onSearch={handleTitleSearch} />\n\n      {/* Displaying filtered preblogs and user-added blogs based on the search query */}\n      {filteredPreblogs.map((blog, index) => (\n        <Blog\n          imgURL={blog.imgURL}\n          key={index}\n          id={index}\n          title={blog.title}\n          content={blog.content}\n          theme={blog.theme}\n          description={blog.description}\n        />\n      ))}\n      {filteredBlogs.map((blog, index) => (\n        <Blog\n          imgURL={blog.imgURL}\n          key={index}\n          id={index}\n          title={blog.title}\n          content={blog.content}\n          theme={blog.theme}\n          description={blog.description}\n        />\n      ))}\n\n      <CreateBlog onAdd={addBlog} />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}